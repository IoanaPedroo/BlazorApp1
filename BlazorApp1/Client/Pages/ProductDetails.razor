@page "/product/{id:int}"
@inject IProductService ProductService;
@inject ILocalStorageService LocalStorage
@inject IToastService ToastService
@inject ICartService CartService

<div class="views">
    <i class="oi oi-eye"></i>@product.Views.ToString("0##");
</div>
<div class="media">
    <div class="media-big-image-wrapper mr-2">
        <img class="media-big-image" src="@product.Image" alt="@product.Title" />
    </div>
    <div class="media-body">
        <h2 class="mb-0">@product.Title</h2>
        <p>@product.Description</p>
        @if(product.ProductVariants != null && product.ProductVariants.Count > 1)
        {
           <div class="form-group">
               <select class="form-control" @bind="currentEditionId">
                    @foreach(ProductVariant variant in product.ProductVariants)
                    {
                        <option value="@variant.EditionId">@variant.Edition.Name</option>
                    }
                </select>
           </div>
        }
        @if(GetSelectedVariant() != null)
        {
            @if(GetSelectedVariant().OriginalPrice > GetSelectedVariant().Price)
            {
                <h6 class="text-muted original-price">$@GetSelectedVariant().OriginalPrice</h6>
            }
            <h4 class="price">
                $@GetSelectedVariant().Price
            </h4>
        }

        <button class="btn btn-primary" @onclick="AddToCart"><i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add to Cart</button>
    </div>
</div>

@code {
    public Product product = new Product();
    private int currentEditionId = 1;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {

        product = await ProductService.LoadProduct(Id);
        if(product.ProductVariants.Count > 0)
        {
            currentEditionId = product.ProductVariants[0].EditionId;
        }
    }

    private ProductVariant GetSelectedVariant()
    {
        ProductVariant variant = product.ProductVariants.FirstOrDefault(v => v.EditionId == currentEditionId);
        return variant;
    }

    private async Task AddToCart()
    {
        //var cart = await LocalStorage.GetItemAsync<List<ProductVariant>>("cart");
        //if(cart == null)
        //{
        //    cart = new List<ProductVariant>();
        //}
        //cart.Add(GetSelectedVariant());
        //await LocalStorage.SetItemAsync("cart", cart);
        //ToastService.ShowSuccess(product.Title, "Added to cart:");

        await CartService.AddToCart(GetSelectedVariant());
    }
}
