@inject IProductService ProductService
@implements IDisposable

<ul class="list-unstyled">
    @foreach (Product product in ProductService.Products)
    {
        <li class="media my-3">
            <div class="media-image-wrapper mr-2">
                <a href="/product/@product.Id">
                    <img class="media-image" src="@product.Image" alt="@product.Title">
                    </a>
            </div>
            <div class="media-body">
                <a href=/product/@product.Id>
                    <h4 class="mb-0">@product.Title</h4>
                </a>
                <p>@product.Description</p>
                <h5 class="price">@GetPriceText(product)</h5>
            </div>
        </li>
    }
</ul>

@code {

    protected override void OnInitialized()
    {
        ProductService.OnChange += StateHasChanged;
    }

    public void Dispose()
    {
        ProductService.OnChange -= StateHasChanged;
    }

    private string GetPriceText(Product product)
    {
        var variants = product.ProductVariants;
        if(variants.Count == 0)
        {
            return string.Empty;
        }
        else if(variants.Count == 1)
        {
            return $"${variants[0].Price}";
        }
        decimal minPrice = variants.Min(v => v.Price);
        return $"Stating at ${minPrice}";
    }
}
